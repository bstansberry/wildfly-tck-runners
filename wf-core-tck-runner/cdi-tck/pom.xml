<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright \(c\) "2022" Red Hat and others
  ~
  ~ This program and the accompanying materials are made available under the Apache Software License 2.0 which is available at:
  ~  https://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~  SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Just for staging proflie access (-Pstaging) for unreleased Jakarta APIs -->
  <parent>
    <groupId>org.wildfly.tck</groupId>
    <artifactId>core-tck-runner-parent</artifactId>
    <version>1.0.0</version>
  </parent>

  <artifactId>cdi-tck-runner</artifactId>
  <name>WildFly Jakarta CDI TCK Runner</name>

  <properties>
    <testng.version>7.4.0</testng.version>
    <maven.compiler.release>11</maven.compiler.release>
  </properties>

  <dependencies>
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wildfly.arquillian</groupId>
      <artifactId>wildfly-arquillian-container-managed</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.el</groupId>
      <artifactId>jakarta.el-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>cdi-tck-core-impl</artifactId>
      <version>${cdi.tck.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.test-audit</groupId>
          <artifactId>jboss-test-audit-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.test-audit</groupId>
          <artifactId>jboss-test-audit-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>cdi-tck-core-impl</artifactId>
      <version>${cdi.tck.version}</version>
      <type>sig</type>
      <classifier>sigtest-jdk11</classifier>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.test-audit</groupId>
          <artifactId>jboss-test-audit-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.test-audit</groupId>
          <artifactId>jboss-test-audit-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-porting-package-tck</artifactId>
      <version>${weld.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.ee.tck.coreprofile</groupId>
      <artifactId>cdi-lite-tck-suite</artifactId>
      <version>${core.profile.tck.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.ee.tck.coreprofile</groupId>
      <artifactId>cdi-lite-tck-suite</artifactId>
      <type>xml</type>
      <version>${core.profile.tck.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.ee.tck.coreprofile</groupId>
      <artifactId>common-annotations</artifactId>
      <version>${core.profile.tck.version}</version>
      <type>sig</type>
      <classifier>sigtest-jdk11</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.el</artifactId>
      <version>${glassfish.jakarta.el.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.testng</groupId>
      <artifactId>arquillian-testng-container</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.descriptors</groupId>
      <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
      <version>${shrinkwrap.ee.descriptors.impl.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-jboss-home-is-set</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <requireEnvironmentVariable>
                  <variableName>JBOSS_HOME</variableName>
                  <message>Environment variable "JBOSS_HOME" must be set in order to execute in-container tests. Please configure it so that it points to your WildFly installation.</message>
                </requireEnvironmentVariable>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-weld-dependencies</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>org.jboss.weld</includeGroupIds>
              <includeArtifactIds>weld-porting-package-tck</includeArtifactIds>
              <stripVersion>true</stripVersion>
              <overWriteReleases>true</overWriteReleases>
              <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
            </configuration>
          </execution>

          <execution>
            <id>copy-cdi-suite-xml</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>jakarta.ee.tck.coreprofile</includeGroupIds>
              <includeArtifactIds>cdi-lite-tck-suite</includeArtifactIds>
              <type>xml</type>
              <stripVersion>true</stripVersion>
              <overWriteReleases>true</overWriteReleases>
              <outputDirectory>${project.build.directory}/suites</outputDirectory>
            </configuration>
          </execution>

          <execution>
            <id>copy-cdi-sigtest</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>jakarta.enterprise</includeGroupIds>
              <includeArtifactIds>cdi-tck-core-impl</includeArtifactIds>
              <type>sig</type>
              <classifier>sigtest-jdk11</classifier>
              <stripVersion>true</stripVersion>
              <overWriteReleases>true</overWriteReleases>
              <outputDirectory>${project.build.directory}/sigtest</outputDirectory>
            </configuration>
          </execution>

          <execution>
            <id>copy-ca-sigtest</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>jakarta.ee.tck.coreprofile</includeGroupIds>
              <includeArtifactIds>common-annotations</includeArtifactIds>
              <type>sig</type>
              <classifier>sigtest-jdk11</classifier>
              <stripVersion>true</stripVersion>
              <overWriteReleases>true</overWriteReleases>
              <outputDirectory>${project.build.directory}/sigtest</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M6</version>
        <configuration>
          <argLine>
            ${addjdkexports}
            ${addjdkopens}
          </argLine>
          <properties>
            <property>
              <!-- Note a 7.4.0 issue results in NPEs and useless output if you go higher than 1 here -->
              <name>surefire.testng.verbose</name>
              <value>0</value>
            </property>
            <property>
              <name>usedefaultlisteners</name>
              <value>false</value>
            </property>
          </properties>
          <forkMode>once</forkMode>
          <dependenciesToScan>
            <dependency>jakarta.enterprise:cdi-tck-core-impl</dependency>
          </dependenciesToScan>
          <systemPropertyVariables>
            <arquillian.launch>wildfly-core-profile</arquillian.launch>
            <org.jboss.cdi.tck.cdiLiteMode>true</org.jboss.cdi.tck.cdiLiteMode>
            <org.jboss.cdi.tck.libraryDirectory>target/dependency/lib</org.jboss.cdi.tck.libraryDirectory>
            <org.jboss.cdi.tck.testDataSource>java:jboss/datasources/ExampleDS</org.jboss.cdi.tck.testDataSource>
            <org.jboss.cdi.tck.spi.Beans>org.jboss.weld.tck.BeansImpl</org.jboss.cdi.tck.spi.Beans>
            <org.jboss.cdi.tck.spi.Contexts>org.jboss.weld.tck.ContextsImpl</org.jboss.cdi.tck.spi.Contexts>
            <org.jboss.cdi.tck.spi.EL>org.jboss.weld.tck.ELImpl</org.jboss.cdi.tck.spi.EL>
          </systemPropertyVariables>
          <systemProperties>
            <!-- Specifiy any garbage collection related args here -->
            <gc.args />
            <!-- This property propagates to the javaVmArguments in arquillian.xml -->
            <additional.vm.args>
              ${failsafe.plugin.jdk17.args}
            </additional.vm.args>
          </systemProperties>
          <suiteXmlFiles>
            <suiteXmlFile>target/suites/cdi-lite-tck-suite.xml</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Run once to update the wildfly distribution located at env.JBOSS_HOME -->
    <profile>
      <id>update-wildfly</id>
      <dependencies>
        <dependency>
          <groupId>jakarta.enterprise</groupId>
          <artifactId>cdi-tck-ext-lib</artifactId>
          <version>${cdi.tck.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-dependencies</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
                  <overWriteSnapshots>true</overWriteSnapshots>
                  <includeArtifactIds>cdi-tck-ext-lib</includeArtifactIds>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>update-jboss-as</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>validate</phase>
                <configuration>
                  <target>
                    <property file="${basedir}/local.build.properties" />
                    <property file="${basedir}/build.properties" />
                    <property name="jboss.home" value="${env.JBOSS_HOME}" />
                    <echo>
                      =========================================================================
                      Adding CDI ext library
                      Weld version: ${weld.version}
                      JBOSS_HOME: ${env.JBOSS_HOME}
                      =========================================================================
                    </echo>

                    <copy todir="${env.JBOSS_HOME}/standalone/lib/ext" overwrite="true">
                      <fileset dir="target/dependency/lib">
                        <include name="cdi-tck-ext-lib-${cdi.tck.version}.jar" />
                      </fileset>
                    </copy>
                    <copy todir="${env.JBOSS_HOME}/standalone/configuration" overwrite="true">
                      <fileset dir="src/test/configuration">
                        <include name="standalone-eecore.xml" />
                      </fileset>
                    </copy>

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>cdi-signature-test</id>
      <!-- API jars from the WildFly distribution -->
      <dependencies>
        <dependency>
          <groupId>jakarta.annotation</groupId>
          <artifactId>jakarta.annotation-api</artifactId>
          <scope>system</scope>
          <systemPath>${env.JBOSS_HOME}/${ANNOTATION_API}</systemPath>
        </dependency>
        <dependency>
          <groupId>jakarta.el</groupId>
          <artifactId>jakarta.el-api</artifactId>
          <scope>system</scope>
          <systemPath>${env.JBOSS_HOME}/${EXPRESSION_LANGUAGE_API}</systemPath>
        </dependency>
        <dependency>
          <groupId>jakarta.interceptor</groupId>
          <artifactId>jakarta.interceptor-api</artifactId>
          <scope>system</scope>
          <systemPath>${env.JBOSS_HOME}/${INTERCEPTER_API}</systemPath>
        </dependency>
        <dependency>
          <groupId>jakarta.inject</groupId>
          <artifactId>jakarta.inject-api</artifactId>
          <scope>system</scope>
          <systemPath>${env.JBOSS_HOME}/${INJECT_API}</systemPath>
        </dependency>
        <dependency>
          <groupId>jakarta.enterprise</groupId>
          <artifactId>jakarta.enterprise.lang-model</artifactId>
          <scope>system</scope>
          <systemPath>${env.JBOSS_HOME}/${CDI_LANG_MODEL_API}</systemPath>
        </dependency>
        <dependency>
          <groupId>jakarta.enterprise</groupId>
          <artifactId>jakarta.enterprise.cdi-api</artifactId>
          <scope>system</scope>
          <systemPath>${env.JBOSS_HOME}/${CDI_API}</systemPath>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-jars</id>
                <phase>validate</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <overWriteReleases>true</overWriteReleases>
                  <outputDirectory>target/cdi-sigtest-classes</outputDirectory>
                  <includeScope>system</includeScope>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.netbeans.tools</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sigtest</id>
                <phase>process-test-sources</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <sigfile>target/sigtest/cdi-tck-core-impl-sigtest-jdk11.sig</sigfile>
              <packages>jakarta.decorator,jakarta.enterprise,jakarta.interceptor</packages>
              <classes>target/cdi-sigtest-classes</classes>
              <report>target/cdi-sig-report.txt</report>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>ca-signature-test</id>
      <!-- API jars from the WildFly distribution -->
      <dependencies>
        <dependency>
          <groupId>jakarta.annotation</groupId>
          <artifactId>jakarta.annotation-api</artifactId>
          <scope>system</scope>
          <systemPath>${env.JBOSS_HOME}/${ANNOTATION_API}</systemPath>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-jars</id>
                <phase>validate</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <overWriteReleases>true</overWriteReleases>
                  <outputDirectory>target/ca-sigtest-classes</outputDirectory>
                  <includeScope>system</includeScope>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.netbeans.tools</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sigtest</id>
                <phase>process-test-sources</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <sigfile>target/sigtest/common-annotations-sigtest-jdk11.sig</sigfile>
              <packages>jakarta.annotation</packages>
              <classes>target/ca-sigtest-classes</classes>
              <report>target/ca-sig-report.txt</report>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>

