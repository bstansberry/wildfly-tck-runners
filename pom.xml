<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.eclipse.ee4j</groupId>
    <artifactId>project</artifactId>
    <version>1.0.7</version>
  </parent>

  <groupId>org.wildfly.tck</groupId>
  <artifactId>core-tck-runner</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>WildFly Jakarta Core TCK Runner</name>

  <!-- Metadata -->
  <url>https://github.com/eclipse-ee4j/cdi-tck/</url>

  <developers>
    <developer>
      <name>Scott Stark</name>
      <email>sstark@redhat.com</email>
      <organization>Red Hat Inc.</organization>
    </developer>

    <developer>
      <name>Scott Marlow</name>
      <email>smarlow@redhat.com</email>
      <organization>Red Hat Inc.</organization>
    </developer>

  </developers>

  <organization>
    <name>Jakarta Core Profile TCK</name>
    <url>https://github.com/jakartaredhat/core-profile-tck</url>
  </organization>

  <ciManagement>
    <system>Jenkins</system>
    <url>https://ci.eclipse.org/jakartaee-tck//</url>
  </ciManagement>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/eclipse-ee4j/jakartaee-tck/issues</url>
  </issueManagement>

  <inceptionYear>2022</inceptionYear>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <properties>
    <maven.compiler.release>11</maven.compiler.release>

    <!-- Jakarta EE APIs Core -->
    <annotations.api.version>2.1.0</annotations.api.version>
    <interceptors.api.version>2.1.0</interceptors.api.version>
    <inject.api.version>2.0.1</inject.api.version>
    <cdi.api.version>4.0.0</cdi.api.version>
    <el.api.version>5.0.0</el.api.version>
    <jsonp.api.version>2.1.0</jsonp.api.version>
    <jsonb.api.version>3.0.0</jsonb.api.version>
    <rest.api.version>3.1.0</rest.api.version>
    <core.tck.version>10.0.0-SNAPSHOT</core.tck.version>
    <cdi.tck.version>4.0.0</cdi.tck.version>
    <rest.tck.version>3.1.0</rest.tck.version>

    <!-- Test tools/dependencies -->
    <arquillian.version>1.7.0.Alpha10</arquillian.version>
    <arquillian.container.se.api.version>1.0.1.Final</arquillian.container.se.api.version>
    <apache.httpclient.version>3.1</apache.httpclient.version>
    <glassfish.jakarta.el.version>4.0.2</glassfish.jakarta.el.version>
    <log4j.version>1.2.17</log4j.version>
    <weld.version>5.0.0.CR2</weld.version>
    <!-- Locally build projects -->
    <resteasy.version>6.1.0-SNAPSHOT</resteasy.version>
    <wildfly.arquillian.version>4.0.0.Alpha2-SNAPSHOT</wildfly.arquillian.version>
    <gc.args />
    <failsafe.plugin.jdk17.args/>
  </properties>

  <!-- Dependency management -->
  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>cdi-tck-api</artifactId>
        <version>${cdi.tck.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>cdi-tck-ext-lib</artifactId>
        <version>${cdi.tck.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>jakarta.enterprise.lang-model</artifactId>
        <version>${cdi.api.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>jakarta.enterprise.cdi-api</artifactId>
        <version>${cdi.api.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.interceptor</groupId>
        <artifactId>jakarta.interceptor-api</artifactId>
        <version>${interceptors.api.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.annotation</groupId>
        <artifactId>jakarta.annotation-api</artifactId>
        <version>${annotations.api.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.inject</groupId>
        <artifactId>jakarta.inject-api</artifactId>
        <version>${inject.api.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.el</groupId>
        <artifactId>jakarta.el-api</artifactId>
        <version>${el.api.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.json</groupId>
        <artifactId>jakarta.json-api</artifactId>
        <version>${jsonp.api.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.json.bind</groupId>
        <artifactId>jakarta.json.bind-api</artifactId>
        <version>${jsonb.api.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.ws.rs</groupId>
        <artifactId>jakarta.ws.rs-api</artifactId>
        <version>${rest.api.version}</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-bom</artifactId>
        <version>${resteasy.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>${arquillian.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.wildfly.arquillian</groupId>
        <artifactId>wildfly-arquillian-container-managed</artifactId>
        <version>${wildfly.arquillian.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Configure the build -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.netbeans.tools</groupId>
          <artifactId>sigtest-maven-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <scm>
    <connection>scm:git:git@github.com:eclipse-ee4j/cdi-tck.git</connection>
    <developerConnection>scm:git:git@github.com:eclipse-ee4j/cdi-tck.git</developerConnection>
    <url>https://github.com/eclipse-ee4j/cdi-tck</url>
    <tag>HEAD</tag>
  </scm>

  <profiles>

    <!-- Run the TCK in the managed container (full Java EE platform) -->
    <profile>
      <id>core-tck</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>target</name>
          <value>core-tck</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>jakarta.ee.tck</groupId>
          <artifactId>core-tck-impl</artifactId>
          <version>${core.tck.version}</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>org.jboss.arquillian.core</groupId>
              <artifactId>arquillian-core-spi</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.jboss.arquillian.core</groupId>
              <artifactId>arquillian-core-api</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.jboss.logmanager</groupId>
              <artifactId>log4j-jboss-logmanager</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
          <version>${arquillian.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-client</artifactId>
        </dependency>
      </dependencies>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-jboss-home-is-set</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireEnvironmentVariable>
                      <variableName>JBOSS_HOME</variableName>
                      <message>Environment variable "JBOSS_HOME" must be set in order to execute in-container tests. Please configure it so that it points to your WildFly installation.</message>
                    </requireEnvironmentVariable>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <!-- perform this any time before the tests are executed -->
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${env.JBOSS_HOME}/standalone/configuration</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/test/configuration</directory>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <excludedGroups></excludedGroups>

              <argLine>
                --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                --add-opens=java.base/java.io=ALL-UNNAMED
                --add-opens=java.base/java.lang=ALL-UNNAMED
                --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
                --add-opens=java.base/java.security=ALL-UNNAMED
                --add-opens=java.base/java.util=ALL-UNNAMED
                --add-opens=java.management/javax.management=ALL-UNNAMED
                --add-opens=java.naming/javax.naming=ALL-UNNAMED
              </argLine>
              <systemPropertyVariables>
                <!-- Silencing the broken code in getActiveConfiguration(),
                    see https://github.com/arquillian/arquillian/blob/master/impl-base/src/main/java/org/jboss/arquillian/impl/client/container/ContainerRegistryCreator.java -->
                <arquillian.launch>wildfly-core-profile</arquillian.launch>
                <!-- Specified system properties are not
                    available during in-container test execution -->
                <org.jboss.cdi.tck.libraryDirectory>target/dependency/lib</org.jboss.cdi.tck.libraryDirectory>
                <org.jboss.cdi.tck.testDataSource>java:jboss/datasources/ExampleDS</org.jboss.cdi.tck.testDataSource>
              </systemPropertyVariables>
              <systemProperties>
                <!-- This property propagates to the javaVmArguments in arquillian.xml -->
                <additional.vm.args>
                  ${failsafe.plugin.jdk17.args}
                </additional.vm.args>
              </systemProperties>
              <dependenciesToScan>jakarta.ee.tck:core-tck-impl</dependenciesToScan>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>rest-tck</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>target</name>
          <value>rest-tck</value>
        </property>
      </activation>
      <properties>
        <excluded.groups>xml_binding</excluded.groups>
      </properties>

      <dependencies>
        <dependency>
          <groupId>jakarta.ws.rs</groupId>
          <artifactId>jakarta-restful-ws-tck</artifactId>
          <version>${rest.tck.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>jakarta.json</groupId>
          <artifactId>jakarta.json-api</artifactId>
        </dependency>

        <dependency>
          <groupId>jakarta.json.bind</groupId>
          <artifactId>jakarta.json.bind-api</artifactId>
        </dependency>

        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>org.jboss.arquillian.core</groupId>
              <artifactId>arquillian-core-spi</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.jboss.arquillian.core</groupId>
              <artifactId>arquillian-core-api</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.jboss.logmanager</groupId>
              <artifactId>log4j-jboss-logmanager</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
          <version>${arquillian.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-client</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-servlet-initializer</artifactId>
        </dependency>
      </dependencies>

      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-jboss-home-is-set</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireEnvironmentVariable>
                      <variableName>JBOSS_HOME</variableName>
                      <message>Environment variable "JBOSS_HOME" must be set in order to execute in-container tests. Please configure it so that it points to your WildFly installation.</message>
                    </requireEnvironmentVariable>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <!-- perform this any time before the tests are executed -->
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${env.JBOSS_HOME}/standalone/configuration</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/test/configuration</directory>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <excludedGroups>${excluded.groups}</excludedGroups>

              <argLine>
                --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                --add-opens=java.base/java.io=ALL-UNNAMED
                --add-opens=java.base/java.lang=ALL-UNNAMED
                --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
                --add-opens=java.base/java.security=ALL-UNNAMED
                --add-opens=java.base/java.util=ALL-UNNAMED
                --add-opens=java.management/javax.management=ALL-UNNAMED
                --add-opens=java.naming/javax.naming=ALL-UNNAMED
              </argLine>
              <systemPropertyVariables>
                <arquillian.launch>wildfly-core-profile</arquillian.launch>
                <servlet_adaptor>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet_adaptor>
                <webServerHost>localhost</webServerHost>
                <webServerPort>8080</webServerPort>
                <junit.log.traceflag>true</junit.log.traceflag>
                <user>j2ee</user>
                <password>j2ee</password>
                <authuser>javajoe</authuser>
                <authpassword>javajoe</authpassword>
                <porting.ts.url.class.1>ee.jakarta.tck.ws.rs.lib.implementation.sun.common.SunRIURL</porting.ts.url.class.1>
                <jimage.dir>${project.build.directory}/jdk11-bundle</jimage.dir>
                <optional.tech.packages.to.ignore>jakarta.xml.bind</optional.tech.packages.to.ignore>
                <signature.sigTestClasspath>${env.JBOSS_HOME}/modules/system/layers/base/jakarta/ws/rs/api/main/jboss-jaxrs-api_3.0_spec-1.0.1.Final.jar</signature.sigTestClasspath>

              </systemPropertyVariables>
              <systemProperties>
                <!-- This property propagates to the javaVmArguments in arquillian.xml -->
                <additional.vm.args>
                  ${failsafe.plugin.jdk17.args}
                </additional.vm.args>
              </systemProperties>
              <dependenciesToScan>jakarta.ws.rs:jakarta-restful-ws-tck</dependenciesToScan>
            </configuration>
          </plugin>
        </plugins>
      </build>

    </profile>

    <profile>
      <id>cdi-tck</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>target</name>
          <value>cdi-tck</value>
        </property>
      </activation>
      <properties>
        <excluded.groups>se</excluded.groups>
      </properties>
      <dependencies>
        <dependency>
          <groupId>jakarta.el</groupId>
          <artifactId>jakarta.el-api</artifactId>
        </dependency>
        <dependency>
          <groupId>jakarta.enterprise</groupId>
          <artifactId>cdi-tck-core-impl</artifactId>
          <version>${cdi.tck.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld</groupId>
          <artifactId>weld-porting-package-tck</artifactId>
          <version>${weld.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.glassfish</groupId>
          <artifactId>jakarta.el</artifactId>
          <version>${glassfish.jakarta.el.version}</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>org.jboss.arquillian.core</groupId>
              <artifactId>arquillian-core-spi</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.jboss.arquillian.core</groupId>
              <artifactId>arquillian-core-api</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.jboss.logmanager</groupId>
              <artifactId>log4j-jboss-logmanager</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
          <version>${arquillian.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </dependency>
      </dependencies>
      <build>
        <resources>
          <resource>
            <directory>src/test/resources</directory>
          </resource>
          <resource>
            <directory>src/test/wildfly8</directory>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-jboss-home-is-set</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireEnvironmentVariable>
                      <variableName>JBOSS_HOME</variableName>
                      <message>Environment variable "JBOSS_HOME" must be set in order to execute in-container tests. Please configure it so that it points to your WildFly installation.</message>
                    </requireEnvironmentVariable>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <!-- perform this any time before the tests are executed -->
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${env.JBOSS_HOME}/standalone/configuration</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${env.JBOSS_HOME}/docs/examples/configs</directory>
                      <includes>standalone-activemq-embedded.xml</includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludedGroups>${excluded.groups}</excludedGroups>

              <argLine>
                --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                --add-opens=java.base/java.io=ALL-UNNAMED
                --add-opens=java.base/java.lang=ALL-UNNAMED
                --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
                --add-opens=java.base/java.security=ALL-UNNAMED
                --add-opens=java.base/java.util=ALL-UNNAMED
                --add-opens=java.management/javax.management=ALL-UNNAMED
                --add-opens=java.naming/javax.naming=ALL-UNNAMED
              </argLine>
              <properties>
                <property>
                  <!-- Note a 7.4.0 issue results in NPEs and useless output if you go higher than 1 here -->
                  <name>surefire.testng.verbose</name>
                  <value>0</value>
                </property>
                <property>
                  <name>usedefaultlisteners</name>
                  <value>false</value>
                </property>
              </properties>
              <forkMode>once</forkMode>
              <dependenciesToScan>
                <dependency>jakarta.enterprise:cdi-tck-core-impl</dependency>
              </dependenciesToScan>
              <systemPropertyVariables>
                <arquillian.launch>wildfly-core-profile</arquillian.launch>
                <org.jboss.cdi.tck.libraryDirectory>target/dependency/lib</org.jboss.cdi.tck.libraryDirectory>
                <org.jboss.cdi.tck.testDataSource>java:jboss/datasources/ExampleDS</org.jboss.cdi.tck.testDataSource>
                <org.jboss.cdi.tck.spi.Beans>org.jboss.weld.tck.BeansImpl</org.jboss.cdi.tck.spi.Beans>
                <org.jboss.cdi.tck.spi.Contexts>org.jboss.weld.tck.ContextsImpl</org.jboss.cdi.tck.spi.Contexts>
                <org.jboss.cdi.tck.spi.EL>org.jboss.weld.tck.ELImpl</org.jboss.cdi.tck.spi.EL>
              </systemPropertyVariables>
              <systemProperties>
                <!-- Specifiy any garbage collection related args here -->
                <gc.args />
                <!-- This property propagates to the javaVmArguments in arquillian.xml -->
                <additional.vm.args>
                  ${failsafe.plugin.jdk17.args}
                </additional.vm.args>
              </systemProperties>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/tck-lite-suite.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Run once to update the wildfly distribution -->
    <profile>
      <id>update-wildfly</id>
      <dependencies>
        <dependency>
          <groupId>jakarta.enterprise</groupId>
          <artifactId>cdi-tck-ext-lib</artifactId>
          <version>${cdi.tck.version}</version>
        </dependency>
      </dependencies>
      <build>
        <defaultGoal>package</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-dependencies</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
                  <overWriteSnapshots>true</overWriteSnapshots>
                  <includeArtifactIds>cdi-tck-ext-lib</includeArtifactIds>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>update-jboss-as</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <property file="${basedir}/local.build.properties" />
                    <property file="${basedir}/build.properties" />
                    <property name="jboss.home" value="${env.JBOSS_HOME}" />
                    <echo>
                      =========================================================================
                      Adding CDI ext library
                      Weld version: ${weld.version}
                      JBOSS_HOME: ${jboss.home}
                      =========================================================================
                    </echo>

                    <copy todir="${env.JBOSS_HOME}/standalone/lib/ext" overwrite="true">
                      <fileset dir="target/dependency/lib">
                        <include name="cdi-tck-ext-lib-${cdi.tck.version}.jar" />
                      </fileset>
                    </copy>
                    <copy todir="${env.JBOSS_HOME}/standalone/configuration" overwrite="true">
                      <fileset dir="src/test/configuration">
                        <include name="standalone-eecore.xml" />
                      </fileset>
                    </copy>

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>

